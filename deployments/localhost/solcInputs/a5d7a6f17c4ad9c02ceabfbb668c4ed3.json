{
  "language": "Solidity",
  "sources": {
    "contracts/Greeter.sol": {
      "content": "//SPDX-License-Identifier: Unlicense\npragma solidity 0.8.6;\n\n//import \"hardhat/console.sol\";\n\n/// @title An example Greeter contract\n/// @notice This contract is only for simulation purposes\n/// @dev All function calls are currently implemented without side effects\n/// @custom:experimental This is an experimental contract.\ncontract Greeter {\n    string private greeting;\n\n    constructor(string memory _greeting) {\n        //console.log(\"Deploying a Greeter with greeting:\", _greeting);\n        greeting = _greeting;\n    }\n\n    /// @notice Returns a greeting phrase\n    /// @return Greeting string\n    function greet() external view returns (string memory) {\n        return greeting;\n    }\n\n    /// @notice Sets a greeting phrase\n    /// @dev Contains a console log output\n    /// @param _greeting The greeting phrase\n    function setGreeting(string memory _greeting) external {\n        //console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n        greeting = _greeting;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates",
          "devdoc",
          "userdoc"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}